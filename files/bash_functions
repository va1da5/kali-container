function rsync(){
    command rsync --progress "$@"
}

function extract () {
     if [ -f $1 ] ; then
         case $1 in
             *.tar.bz2)   tar xjf $1    ;;
             *.tar.gz)    tar xzf $1    ;;
             *.bz2)       bunzip2 $1    ;;
             *.rar)       rar x $1      ;;
             *.gz)        gunzip $1     ;;
             *.tar)       tar xf $1     ;;
             *.tbz2)      tar xjf $1    ;;
             *.tgz)       tar xzf $1    ;;
             *.zip)       unzip $1      ;;
             *.Z)         uncompress $1 ;;
             *.7z)        7z x $1       ;;
             *)           echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

function psgrep() {
    if [ ! -z $1 ] ; then
        echo "Grepping for processes matching $1..."
        ps aux | grep $1 | grep -v grep
    else
        echo "!! Need name to grep for"
    fi
}

function stringify {
  local input="$@"
  
  input="${input//\"/\\\"}"
  input="${input//\\/\\\\}"
  input="${input// /+}"

  echo "${input}"
}

# find help on cheat.sh
function help {
  curl "cheat.sh/$(stringify $@)"
}

function cd() {
    builtin cd "$@" && ls -lh
}

function mkcd() {
    mkdir -p "$1" && cd "$1"
}

function getpass() {
    if [ -n "$1" ]; then 
        openssl rand -base64 $1
    else 
        openssl rand -base64 20
    fi
}

function uuid() {
 local N B C='89ab'
for (( N=0; N < 16; ++N ))
 do
  B=$(( $RANDOM%256 ))
case $N in
   6)
    printf '4%x' $(( B%16 ))
    ;;
   8)
    printf '%c%x' ${C:$RANDOM%${#C}:1} $(( B%16 ))
    ;;
   3 | 5 | 7 | 9)
    printf '%02x-' $B
    ;;
   *)
    printf '%02x' $B
    ;;
  esac
 done
echo
}


git_branch () {
    # Get current Git branch
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
    }

git_last_update () {
    # Get last update on current Git branch
    git log 2> /dev/null | head -n 3 | grep ^Date | cut -f4- -d' ';
    }

export PS1="\[\033[0;32m\]\[\033[0m\033[0;35m\]\u\[\033[0;36m\]@\[\033[0;36m\]\h:\w\[\033[0;32m\] \$(git_branch) \$(git_last_update)\n\[\033[0;32m\]└─\[\033[0m\033[0;31m\] [\D{%F %T}] \$\[\033[0m\033[0;32m\] >>>\[\033[0m\] "

